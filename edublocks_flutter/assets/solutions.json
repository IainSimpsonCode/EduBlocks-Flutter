{
    "1": "\n# Start Here\nwhile True:\n count += 1\n print(count)\n pass",
    "1fixed": "\n# Start Here\ncount = 0\nwhile True:\n count += 1\n print(count)\n pass",
    "1extention": "\n# Start Here\ncount = 0\nwhile True:\n if (count <= 10):\n  count += 1\n  print(count)\n  pass\n pass",
    "1ErrorCode": "count += 1",
    "1detailedErrorMessage": "NameError: name 'count' is not defined\n\n\nIt is saying 'You told me to use something called count, but i don't know what that is yet!'\n\nIt's like asking someone to bring you a toy without telling them what toy you want.\n\nYou might have:\n- Used a variable called 'count' before setting it\n- Misspelled the name of the variable\n- Forgot to create the variable 'count' first\n\nMake sure you created count before using it. Check spelling - variable names must match exactly.\n\nIf you're using a variable, you must first tell the computer what it is.",
    "1detailedErrorMessageImage": "block_images/variables/count=0.png",
    "2": "\n# Start Here\nelif (age <= 16):\n print('You are in High School')\n pass\nif (age <= 11):\n print('You are in Primary School')\n pass\nelse:\n print('You are old')\n pass",
    "2fixed": "\n# Start Here\nif (age <= 11):\n print('You are in Primary School')\n pass\nelif (age <= 16):\n print('You are in High School')\n pass\nelse\n print('You are old')\n pass",
    "2extention": "\n# Start Here\nprint('My friend is')\nif (age <= 11):\n print('You are in Primary School')\n pass\nelif (age <= 16):\n print('You are in High School')\n pass\nelse\n print('You are old')\n pass",
    "2ErrorCode": "elif (age <= 16):",
    "2detailedErrorMessage": "SyntaxError: invalid syntax (<string>, line 3)\n\n\nIt is saying something on line 3 doesn't follow the rules, so I don't understand it.\n\nYou might have:\n- Used the wrong type of block or incorrect format for the statement\n- Used an elif block before an if block\n- Forgotten a colon (:) after an if, for, or while statement\n\nLook closely at line 3 of your code.\n\nCheck for the order of your blocks, typos or missing punctuation.",
    "2detailedErrorMessageImage": "block_images/logic/elseIfAgeLessThan16/elseIfAgeLessThan16Small.png",
    "3": "\n# Start Here\nfriends = 'Bob'\nfriends.append('Ann')\nprint('My friend is')\nprint(friends[0])",
    "3fixed": "\n# Start Here\nfriends = ['Bob', 'Charles']\nfriends.append('Ann')\nprint('My friend is')\nprint(friends[0])",
    "3extention": "\n# Start Here\nfriends = ['Bob', 'Charles']\nfriends.append('Ann')\nfriends.append('Ann')\nprint('My friend is')\nprint(friends[0])",
    "3ErrorCode": "friends = 'Bob'",
    "3detailedErrorMessage": "SyntaxError: invalid syntax (<string>, line 3)\n\n\nIt is saying you're trying to use .append() on a string, but .append() can only be used on a list.\n\nUse .append() for lists, not strings.\n\nFor strings, use + or += to combine words together.\n\nStrings are single words, like 'Hello' or 'Goodbye'. A list is a group of words together within square brackets, like ['Hello', 'Goodbye']. You can add (or append) more words to a list, because it is already a group of words. However you cannot add more words to a string, as a string can only be one single word at a time.\n\nCheck if you are using a text block (1 word within speech marks), or a list block (1 or more words within square brackets []).",
    "3detailedErrorMessageImage": "block_images/friends-append.png",
    "4": "\n# Start Here\nnumber1 = int(5)\nnumber2 = '2'\nprint(number1 + number2)",
    "4fixed": "\n# Start Here\nnumber1 = int(5)\nnumber2 = 2\nprint(number1 + number2)",
    "4extention": "\n# Start Here\nnumber1 = int(5)\nnumber2 = 2\nprint(number1 + number2)\nprint('You are old')",
    "4ErrorCode": "number2 = '2'",
    "4detailedErrorMessage": "TypeError: Unsupported operand type(s) for +: 'int' and 'str'\n\n\nIt is saying you're trying to add a number and a word together using +, but I don't know how to do that!\n\nIt's like trying to add 5 + 'Apples' - it gets confused. Numbers and words need to be added in different ways.\n\nYou might have connected a Math block (number) to a Text block (string) with a + - that doesn't work unless you help Python understand.\n\nOption 1: Make everything text using str()\nOption 2: Keep it as numbers (no speech marks)",
    "4detailedErrorMessageImage": "block_images/variables/number2_variable.png",
    "5": "\n# Start Here\nfruits = ['Orange', 'Apple', 'Mango', 'Banana']\nprint(fruits)\nprint('My favourite fruit is ...')\nprint(fruits[3])\nfruits.remove(fruits[3])\nprint(fruits[3])",
    "5fixed": "\n# Start Here\nfruits = ['Orange', 'Apple', 'Mango', 'Banana']\nprint(fruits)\nprint('My favourite fruit is ...')\nprint(fruits[3])\nfruits.remove(fruits[3])\nprint(fruits[2])",
    "5extention": "\n# Start Here\nfriends = ['Bob', 'Charles']\nfriends.append('Ann')\nprint(friends[0])",
    "5ErrorCode": "print(fruits[3])",
    "5detailedErrorMessage": "5 Error",
    "5detailedErrorMessageImage": "block_images/import/math.png",
    "6": "\n# Start Here\ntotal_grades = 0\ngrade1 = 9\ngrade2 = 'six'\ngrade3 = 4\ngrade4 = 7\nmy_grades = [grade1, grade2, grade3, grade4]\nprint('All my grades')\nprint(my_grades)\nprint(total_grades)\ni = 0\nwhile i < len(my_grades):\n total_grades += int(my_grades[i])\n i += 1\n pass\nprint('All my grades')\nprint(total_grades)",
    "6fixed": "\n# Start Here\ntotal_grades = 0\ngrade1 = 9\ngrade2 = 'six'\ngrade3 = 4\ngrade4 = 7\nmy_grades = [grade1, grade2, grade3, grade4]\nprint('All my grades')\nprint(my_grades)\nprint(total_grades)\ni = 0\nwhile i < len(my_grades):\n total_grades += int(my_grades[i])\n i += 1\n pass\nprint('All my grades')\nprint(total_grades)",
    "6extention": "\n# Start Here\ntotal_grades = 0\ngrade1 = 9\ngrade2 = 'six'\ngrade3 = 4\ngrade4 = 7\nmy_grades = [grade1, grade2, grade3, grade4]\nprint('All my grades')\nprint(my_grades)\nprint(total_grades)\nfor i in range(len(my_grades)):\n total_grades += int(my_grades[i])\n pass\nprint('All my grades')\nprint(total_grades)",
    "6ErrorCode": "grade2 = 'six'",
    "6detailedErrorMessage": "6 Error",
    "6detailedErrorMessageImage": "block_images/import/math.png"
}
